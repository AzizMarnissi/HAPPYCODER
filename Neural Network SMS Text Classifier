
import pandas as pd
import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import make_pipeline
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Load dataset
data = pd.read_csv('path_to_sms_spam_collection_dataset.csv', encoding='latin-1')
data = data[['v1', 'v2']]  # Select relevant columns
data.columns = ['label', 'message']  # Rename columns
Step 2: Preprocess Data
Split the data into training and testing sets. Convert labels to a numerical format.


X = data['message']
y = data['label'].map({'ham': 0, 'spam': 1})  # Convert labels to 0 and 1

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


model = make_pipeline(CountVectorizer(), MultinomialNB())
model.fit(X_train, y_train)  # Train the model

def predict_message(message):
    pred_proba = model.predict_proba([message])[0]  # Get prediction probabilities
    likelihood_ham = pred_proba[0]  # Probability of ham
    label = 'ham' if likelihood_ham > 0.5 else 'spam'  # Determine label
    return [likelihood_ham, label]



# Evaluate the model on the test set
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
